import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

class Result extends StatefulWidget {
  final String place;

  const Result({Key? key, required this.place}) : super(key: key);

  @override
  State<Result> createState() => _ResultState();
}

class _ResultState extends State<Result> {
  Future<Map<String, dynamic>> getDataFromApi() async {
    final response = await http.get(Uri.parse(
        "https://api.openweathermap.org/data/2.5/weather?q=${widget.place}&appid=64997e381ec4dc6a7821ca68178424d1&units=metric"));

    if (response.statusCode == 200) {
      final data = json.decode(response.body);
      return data;
    } else {
      throw Exception("Failed to fetch weather data");
    }
  }

  Future<Map<String, dynamic>> getHourlyDataFromApi() async {
    final response = await http.get(Uri.parse(
        "https://api.openweathermap.org/data/2.5/forecast?q=${widget.place}&appid=64997e381ec4dc6a7821ca68178424d1&units=metric"));

    if (response.statusCode == 200) {
      final data = json.decode(response.body);
      return data;
    } else {
      throw Exception("Failed to fetch hourly weather data");
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      extendBodyBehindAppBar: true,
      body: FutureBuilder<Map<String, dynamic>>(
        future: Future.wait([getDataFromApi(), getHourlyDataFromApi()]).then((responses) {
          return {"current": responses[0], "hourly": responses[1]};
        }),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          }

          if (snapshot.hasError) {
            return Center(child: Text("${snapshot.error}"));
          }

          if (snapshot.hasData) {
            final data = snapshot.data!["current"];
            final hourlyData = snapshot.data!["hourly"]["list"];

            return Stack(
              children: [
                // Background gradient
                Container(
                  width: double.infinity,
                  height: double.infinity,
                  decoration: BoxDecoration(
                    gradient: LinearGradient(
                      begin: Alignment.topLeft,
                      end: Alignment.bottomRight,
                      colors: [
                        Color.fromARGB(255, 207, 230, 248), // Warna putih di atas kiri
                        Colors.blue, // Warna biru di tengah
                        Colors.blue.shade900, // Warna biru tua di kanan bawah
                      ],
                      stops: const [0.0, 0.5, 1.0], // Pengaturan untuk posisi gradasi
                    ),
                  ),
                ),

                // Kotak di depan
                // Positioned(
                //   top: MediaQuery.of(context).size.height / 2 + 170, // Atur posisi vertikal dari atas
                //   left: 0,
                //   right: 0,
                //   bottom: 0,
                //   child: Container(
                //     width: MediaQuery.of(context).size.width - 40,
                //     height: 280,
                //     decoration: BoxDecoration(
                //       color: Color.fromARGB(255, 255, 255, 255).withOpacity(1.0),
                //       borderRadius: BorderRadius.only(
                //         topRight: Radius.circular(30),
                //         topLeft: Radius.circular(30),
                //       ),
                //     ),
                //   ),
                // ),

                // Konten utama
                Positioned.fill(
                  child: Align(
                    alignment: Alignment.center,
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      crossAxisAlignment: CrossAxisAlignment.center,
                      children: [
                        Container(
                          margin: EdgeInsets.symmetric(vertical: 20),
                          padding: EdgeInsets.all(16.0),
                          child: Text(
                            "${data["main"]["feels_like"]}Â°C",
                            style: TextStyle(fontSize: 50, fontWeight: FontWeight.bold, color: Colors.white.withOpacity(0.8)),
                          ),
                        ),
                        SizedBox(height: 250),
                        Container(
                          width: 350,
                          height: 120,
                          decoration: BoxDecoration(
                            color: Colors.black.withOpacity(0.3),
                            borderRadius: BorderRadius.circular(10),
                          ),
                          padding: EdgeInsets.all(16.0),
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceAround,
                            children: [
                              Expanded(
                                child: Container(
                                  padding: EdgeInsets.all(20.0),
                                  decoration: BoxDecoration(
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  child: Column(
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Text(
                                        "${data["wind"]["speed"]}m/s",
                                        style: const TextStyle(color: Colors.white,fontSize: 15, fontWeight: FontWeight.bold),
                                      ),
                                      const SizedBox(height: 2),
                                      const Text(
                                        "Wind",
                                        style: TextStyle(color: Colors.white,fontSize: 12),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                              Expanded(
                                child: Container(
                                  padding: EdgeInsets.all(20.0),
                                  decoration: BoxDecoration(
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  child: Column(
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Text(
                                        "${data["main"]["humidity"]}%",
                                        style: const TextStyle(color: Colors.white,fontSize: 15, fontWeight: FontWeight.bold),
                                      ),
                                      const SizedBox(height: 2),
                                      const Text(
                                        "Humidity",
                                        style: TextStyle(color: Colors.white,fontSize: 12),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                              Expanded(
                                child: Container(
                                  padding: EdgeInsets.all(20.0),
                                  decoration: BoxDecoration(
                                    borderRadius: BorderRadius.circular(8.0),
                                  ),
                                  child: Column(
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Text(
                                        "${data["visibility"]}ft",
                                        style: const TextStyle(color: Colors.white,fontSize: 17, fontWeight: FontWeight.bold),
                                      ),
                                      const SizedBox(height: 2),
                                      const Text(
                                        "Visibility",
                                        style: TextStyle(color: Colors.white,fontSize: 12),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),

                        //data per jam//
                        SizedBox(height: 10),
                        Container(
                          width: 350,
                          height: 100,
                          decoration: BoxDecoration(
                            
                            color: Colors.black.withOpacity(0.3),
                            borderRadius: BorderRadius.circular(10),
                          ),
                          padding: EdgeInsets.all(16.0),
                          child: ListView.builder(
                            scrollDirection: Axis.horizontal,
                            itemCount: hourlyData.length,
                            itemBuilder: (context, index) {
                              final hourData = hourlyData[index];
                              return Container(
                                width: 100,
                                height: 50, // Sesuaikan tinggi kotak di sini
                                margin: EdgeInsets.symmetric(horizontal: 8.0),
                                
                                padding: EdgeInsets.all(8.0),
                                child: Column(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children: [
                                    Text(
                                      "${DateTime.parse(hourData["dt_txt"]).hour}:00",
                                      style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: Colors.white),
                                    ),
                                    SizedBox(height: 4),
                                    Text(
                                      "${hourData["main"]["temp"]}Â°C",
                                      style: TextStyle(fontSize: 16, color: Colors.white),
                                    ),
                                  ],
                                ),
                              );
                            },
                          ),
                        ),

                      ],
                    ),
                  ),
                ),

                // AppBar
                Positioned(
                  top: 0,
                  left: 0,
                  right: 0,
                  child: AppBar(
                    title: Text(
                      "${data["name"]}",
                      style: TextStyle(color: Colors.white),
                    ),
                    backgroundColor: Colors.transparent,
                    elevation: 0,
                    centerTitle: true,
                    leading: GestureDetector(
                      onTap: () {
                        Navigator.pop(context);
                      },
                      child: const Icon(
                        Icons.arrow_back,
                        color: Colors.white,
                      ),
                    ),
                  ),
                ),
              ],
            );
          }

          return Center(child: Text("Failed to fetch weather data"));
        },
      ),
    );
  }
}
